<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:flexui="advancedflex.debugger.aut.flexui.*" creationComplete="onCreationComplete()" width="600" height="400">
	<mx:Metadata>
		[DefaultProperty("test")]
	</mx:Metadata>
	<mx:Script>
		<![CDATA[
			import mx.events.ListEvent;
			import mx.controls.Alert;
			import advancedflex.debugger.aut.framework.Test;
			
			private var _test:Test;
			[Bindable]
			public var source:XMLList;
			
			public function get test():Test {
				return _test;
			}
			
			public function set test(v:Test):void {
				_test = v;
			}
			private function onCreationComplete():void {
				if(_test) {
					source = transformXML(_test.getTestHeader(true));
					total = source..node.(@isMethod == "true").length();
					runLabel.text = "Run(" + total + "/0)";
					_test.runTest(new AUTFlexOutput(this));
					trace(source)
				} else {
					Alert.show("There is no Test.", "Error");
				}
			}
			private var total:int;
			private var success:int = 0;
			private var failure:int = 0;
			private var error:int = 0;
			internal function testItem(path:XML, result:String):void {
				path.@result = result;
				switch (result) {
					case "Success":
					success++;
					successesLabel.text = "Success: " + success;
					path.@label = "  " + String(path.@label).slice(1,-1);
					break;
					
					case "Failure":
					failure++;
					failuresLabel.text = "Failures: " + failure;
					path.@label = "! " + String(path.@label).slice(1,-1);
					break;
					
					default:
					error++;
					errorsLabel.text = "Errors: " + error;
					path.@label = "X " + String(path.@label).slice(1,-1);
					break;
				}
			}
			internal function printMsg(path:XML, message:String):void {
				path.@msg += message;
			}
			internal function printStack(path:XML, message:String):void {
				trace(path.toXMLString(), "\n");
				//path.@stack = message;
			}
			private function onTreeSelected(event:ListEvent):void {
				messageBox.text = Tree(event.target).selectedItem.@msg;
			}
			private function transformXML(xml:XML):XMLList {
		        var item:XML;
	        	var result:XML = xml;
	        	for each(item in result..TestSuite) {
	        		item.setLocalName("node");
	        		item.@label = "TestSuite - " + item.@name;
	        		item.@isMethod = "false";
	        	}
	        	for each(item in result..TestCase) {
	        		item.setLocalName("node");
	        		item.@label = "TestCase - " + String(item.@name).split("::")[1];
	        		item.@isMethod = "false";
	        	}
	        	for each(item in result..method) {
	        		item.setLocalName("node");
	        		item.@label = "? " + item.@type + "::" + item.@name;
	        		item.@isMethod = "true";
	        		item.@msg = "";
	        		item.@stack = "";
	        	}
				return result.children();
			}
		]]>
	</mx:Script>
	<mx:Canvas width="100%" height="100%">
		<mx:Panel backgroundAlpha="0.4" title="AUT Flex Runner" paddingBottom="10" width="100%" height="100%">
			<mx:HBox width="100%">
				<mx:HBox width="25%" height="20" horizontalAlign="left" paddingLeft="0" paddingRight="10">
					<mx:ProgressBar width="100%" trackHeight="12" id="progressBar" labelPlacement="left" label="Running..." mode="manual" />
				</mx:HBox>
				<mx:HBox width="75%" height="20" horizontalAlign="right">
					<mx:Label id="runLabel" text="Run(0/0)"/>
					<mx:Label text="Successes: 0"  id="successesLabel"/>
					<mx:Label id="errorsLabel" text="Errors: 0" />
					<mx:Label id="failuresLabel" text="Failures: 0" />					
				</mx:HBox>
			</mx:HBox>
			<mx:HDividedBox width="100%" height="100%">
				<mx:Tree id="allTestsList" 
					height="100%" borderStyle="inset" dataProvider="{source}" 
					labelField="@label" itemClick="onTreeSelected(event)"  width="150">
				</mx:Tree>			
				<mx:VBox width="50%" height="100%">

						<mx:Label text="Message:"></mx:Label>
			
					<!-- <mx:List id="failureStackTrace" width="100%" height="100%" borderStyle="none" /> -->
					<mx:TextArea id="messageBox" width="100%" height="100%" borderStyle="inset" wordWrap="true"  editable="false"/>
				</mx:VBox>				
			</mx:HDividedBox>
		</mx:Panel>
	</mx:Canvas>
</mx:VBox>